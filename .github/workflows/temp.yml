name: Deploy MkDocs to GitHub Pages

# Ejecutar el workflow cuando haya un push en la rama master
on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Paso 1: Clonar el repositorio en la rama master
    - name: Checkout repository
      run: |
        # git clone --depth 1 --branch master https://github.com/${{ github.repository }} docs
        git clone https://github.com/${{ github.repository }} docs
        mv docs/mkdocs.yml .  # Mover el archivo mkdocs.yml a la raíz

    # Paso 2: Instalar Python y MkDocs
    - name: Set up Python and Install MkDocs
      run: |
        sudo apt-get update
        sudo apt-get install python3 python3-pip -y
        pip3 install mkdocs
        # pip3 install mkdocs-material  # Si usas el tema Material para MkDocs
        pip3 install mkdocs-windmill-dark

    # Paso 3: Build la documentación con MkDocs
    - name: Build the documentation
      run: |
        mkdocs build
        ls -la

    # Paso 4: Copiar archivos generados en un directorio temporal
    - name: Move generated site to temporary directory
      run: mv site docs  # Copio el contenido de 'site' dentro de docs (repositorio)

    # Paso 5: Crear la rama gh-pages y copiar los archivos desde el directorio temporal
    - name: Deploy to GitHub Pages
      run: |
        #git config --global user.name "github-actions[bot]"
        #git config --global user.email "github-actions[bot]@users.noreply.github.com"
        cd docs
        git checkout gh-pages
        git rm -rf .
        git checkout master -- site
        git add .
        git commit -m "Deploy MkDocs to GitHub Pages"
        git push --force https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} gh-pages

    # # Paso 4: Desplegar en la rama gh-pages
    # - name: Deploy to GitHub Pages
    #   run: |

    #     echo "=> git config --global user.name "github-actions[bot]""
    #     git config --global user.name "github-actions[bot]"

    #     echo "=> git config --global user.email "github-actions[bot]@users.noreply.github.com""
    #     git config --global user.email "github-actions[bot]@users.noreply.github.com"

    #     echo "=> git checkout --orphan gh-pages"
    #     git checkout --orphan gh-pages

    #             echo "=> cp -r site/* ."
    #     cp -r site/* .

    #     echo "=> git add ."
    #     git add .

    #     echo "=> git commit -m "Deploy MkDocs to GitHub Pages""
    #     git commit -m "Deploy MkDocs to GitHub Pages"

    #     echo "=> git push --force https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} gh-pagesxi"
    #     git push --force https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} gh-pages


    #     # git config --global user.name "github-actions[bot]"
    #     # git config --global user.email "github-actions[bot]@users.noreply.github.com"
    #     # git checkout --orphan gh-pages  # Cambiar a la rama gh-pages
    #     # git rm -rf .  # Eliminar todo en gh-pages para empezar limpio
    #     # cp -r site/* .  # Copiar todo el contenido de 'site' desde la rama master
    #     # git add .
    #     # git commit -m "Deploy MkDocs to GitHub Pages"
    #     # git push --force https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} gh-pages

